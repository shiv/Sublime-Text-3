<snippet>
	<content><![CDATA[

class fenwick {
public:
    int n;
    vector<int> tree;
    vector<int> temp;
    // original array should follow 0 based indexing

    fenwick() {}

    fenwick(int _n) : n(_n) {
        tree.resize(n + 1);
        temp.resize(n);
        for(int i = 0; i < n; i++)
            modify(i, 1);
    }

    fenwick(vector<int> arr) {
        n = arr.size();
        tree.resize(n + 1, 0);
        temp = arr;
        for(int i = 0; i < n; i++) {
            modify(i, temp[i]);
        }
    }

    void modify(int idx, int val) {
        temp[idx] += val;
        idx += 1;
        while(idx <= n) {
            tree[idx] += val;
            idx += idx & (-idx);
        }
    }

    int query(int idx) {
        idx += 1;
        int ret = 0;
        while(idx > 0) {
            ret += tree[idx];
            idx -= idx & (-idx);
        }
        return ret;
    }

    int lower_bound(int v) {
        int sum = 0, pos = 0;
        int _n = n + 1, logn = log2(_n);

        for(int i = logn; i >= 0; i--) {
            if(pos + (1 << i) < _n and sum + tree[pos + (1 << i)] < v) {
                sum += tree[pos + (1 << i)];
                pos += (1 << i);
            }
        }

        return pos;
    }
};

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>fenwick_tree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
