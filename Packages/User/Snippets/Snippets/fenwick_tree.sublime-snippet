<snippet>
	<content><![CDATA[
class fenwick {
public:
    int n;
    vector<int> tree;
    // original array may follow 0 based indexing
    fenwick() {}

    fenwick(int _n) : n(_n) {
        tree.resize(n + 1, 0);
    }

    fenwick(vector<int> &a) {
        n = int(a.size());
        tree.resize(n + 1, 0);
        for(int i = 0; i < n; i++)
            modify(i, a[i]);
    }
    
    // increments the value of idx by val
    void modify(int idx, int val) {
        idx += 1;
        while(idx <= n) {
            tree[idx] += val;
            idx += idx & (-idx);
        }
    } 

    // returns the sum of a[0..idx]
    int get(int idx) {
        idx += 1;
        int ret = 0;
        while(idx > 0) {
            ret += tree[idx];
            idx -= idx & (-idx);
        }
        return ret;
    }
    
    // returns the sum of a[L..R]
    int get(int L, int R) {
        return get(R) - get(L - 1);
    }
};]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>snippet_fenwick_tree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
